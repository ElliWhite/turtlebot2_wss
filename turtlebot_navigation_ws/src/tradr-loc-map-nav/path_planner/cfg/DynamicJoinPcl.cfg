#!/usr/bin/env python
PACKAGE = "path_planner"

from dynamic_reconfigure.parameter_generator_catkin import *
#from dynamic_reconfigure.parameter_generator import *

gen = ParameterGenerator()

gen.add("laser_frame",    str_t,    0, "Laser frame",  "/laser")
gen.add("global_frame",    str_t,    0, "Global frame",  "/map")

gen.add("colorize_points",   bool_t,   0, "Colorize points",  True)

gen.add("num_subdivisions",    int_t,    0, "Number of subdivisions", 50,  4, 128)
gen.add("radius_near", double_t, 0, "Near/far partitioning threshold",    5.0, 0.5,   15.0)
gen.add("leaf_size", double_t, 0, "Downsampling leaf size",    0.02, 0.0005,   0.2)

outlier_removal_enum = gen.enum([ gen.const("OutlierRemoval_None",      int_t, 0, "Don_t remove outliers"),
                       gen.const("OutlierRemoval_Statistical",     int_t, 1, "Statistical removal"),
                       gen.const("OutlierRemoval_Deterministic",      int_t, 2, "Deterministic removal")],
                       "Outlier removal")
gen.add("outlier_removal", int_t, 0, "Outlier removal", 2, 0, 2, edit_method=outlier_removal_enum)

gen.add("mean_k",    int_t,    0, "Statistical outlier removal: mean K", 50,  10, 100)
gen.add("stddev_mul_thresh",    double_t,    0, "Statistical outlier removal: std.dev.", 1.0, 0.1, 10)

gen.add("radius_search",    double_t,    0, "Deterministic outlier removal: search radius", 0.1, 0.01, 1.0)
gen.add("min_neighbors",    int_t,    0, "Deterministic outlier removal: min neighbors", 3,  2, 50)

gen.add("ransac_distance_threshold",    double_t,    0, "RANSAC distance treshold", 0.05, 0.001, 1.0)
gen.add("ransac_min_inliers",    int_t,    0, "RANSAC min. inliers", 4,  3, 50)

bucket_volume_model_type_enum = gen.enum([ gen.const("BucketVolumeModelType_MinimumDistance",      int_t, 0, "Minimum distance"),
                        gen.const("BucketVolumeModelType_MaximumDistance",      int_t, 1, "Maximum distance"),
                        gen.const("BucketVolumeModelType_SinglePlane",     int_t, 2, "Single plane")],
                        "Bucket volume model type")
gen.add("bucket_volume_model_type", int_t, 0, "Bucket volume model type", 2, 0, 2, edit_method=bucket_volume_model_type_enum)

exit(gen.generate(PACKAGE, "path_planner", "DynamicJoinPcl"))
